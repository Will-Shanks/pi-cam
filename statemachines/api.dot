digraph {
  a_a_start->a_a [label="New Thread", color=blue]
  a_a_start->r_a_start
  a_a_start->s_a_start
  a_a->a_c [label="Connection established"]
  a_c->a_d [label="Recieved Request"]
  a_d->a_s [label="Request Decoded"]
  a_s->{s_a_g_fps, s_a_s_fps, s_a_g_res, s_a_s_res, s_a_stop, s_a_start}
  a_s->{r_a_g_fps, r_a_s_fps, r_a_g_res, r_a_s_res, r_a_stop, r_a_stop}
  a_s->{d_a_start, d_a_stop}
  a_s->a_a_stop
  a_s->a_c [label="Request Serviced"]
  {a_c, a_d, a_s}->a_clean [label="Connection Terminated"]
  a_clean->a_a
  
  a_a_stop->{a_stop, s_a_stop, r_a_stop, d_a_stop} [color=red]
  a_stop->k [color=red]

  a_a [label="Listening for TCP connection on port A_PORT"]
  a_c [label="Read Request from connection"]
  a_d [label="Decode Request"]
  a_s [label="Service Request"]
  a_clean [label="Clean up Connection"]
  a_stop [label="Close Socket"]

  k [label="PowerOff", style=filled, fillcolor=black, fontcolor=white]

  subgraph cluster_a_a {
    label="Main API"
    a_a_start [label="Start Everything", shape=box]
    a_a_stop [label="Poweroff", shape=box]
  }
  subgraph cluster_d_a{
    label="Downloader API"
    d_a_start [label="Request Download", shape=box]
    d_a_stop [label="Cancel Download", shape=box]
  }
  subgraph cluster_r_a {
    label="Recorder API"    
    r_a_g_fps [label="Get R_FPS", shape=box]
    r_a_s_fps [label="Set R_FPS", shape=box]
    r_a_g_res [label="Get R_RES", shape=box]
    r_a_s_res [label="Set R_RES", shape=box]
    r_a_start [label="Start", shape=box]
    r_a_stop [label="Stop", shape=box]
  }
  subgraph cluster_s_a {
    label="Streamer API"
      s_a_g_fps [label="Return S_FPS", shape=box]
      s_a_s_fps [label="Set S_FPS", shape=box]
      s_a_g_res [label="Return S_RES", shape=box]
      s_a_s_res [label="Set S_RES", shape=box]
      s_a_stop [label="Stop", shape=box]
      s_a_start [label="Start", shape=box]
  }
}
